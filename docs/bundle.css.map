{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Play.html"
  ],
  "sourcesContent": [
    "<div class=\"row\">\n    <Media query={ json2mq({ maxWidth: 600 }) }>\n        <div class=\"twelve columns\">\n            {#each $rounds as round, i}\n\n            <header>\n                <h2>Round { i+1 }</h2>\n                <button class=\"x-round button\" on:click=\"removeRound(i)\">X</button>\n            </header>\n\n            <dl>\n                {#each $players as player}\n                <dt>\n                    <label>\n                        <span>{ player }</span>\n                        <input type=\"number\" value=\"{ round[player] }\" \n                            on:input=\"updateScore(event, player, i)\">\n                    </label>\n                </dt>\n                {/each}\n            </dl>\n            {/each}\n        </div>\n    </Media>\n\n    <Media query={ json2mq({ minWidth: 601 }) }>\n    <table class=\"twelve columns\">\n        <thead>\n            <tr>\n                <th>Round #</th>\n                {#each $players as player, i}\n                <th>{ player }</th>\n                {/each}\n                <th>Discard</th>\n            </tr>\n        </thead>\n        <tbody>\n            {#each $rounds as round, i}\n            <tr>\n                <td>\n                    { i+1 } \n                </td>\n                {#each $players as player}\n                <td>\n                    <input type=\"number\" value=\"{ round[player] }\" on:input=\"updateScore(event, player, i)\">\n                </td>\n                {/each}\n\n                <td>\n                    <button class=\"x-round button\" on:click=\"removeRound(i)\">x</button>\n                </td>\n            </tr>\n            {/each}\n\n            <tr class=\"totals\">\n                <td>Totals:</td>\n                {#each $players as player}\n                <td>{ totals[player] || 0 }</td>\n                {/each}\n                <td></td>\n            </tr>\n        </tbody>\n    </table>\n    </Media>\n\n    <div>\n        <button class=\"button button-primary\" on:click=\"nextRound()\">Next round</button>\n        <button class=\"button\" on:click=\"$set({ started: false })\">Change players</button>\n    </div>\n</div>\n\n<style>\nheader {\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    justify-content: space-between;    \n}\n\nh2 {\n    font-size: 2em;\n}\n\nbutton.x-round {\n    background: none;\n    cursor: pointer;\n    border: none;\n    font-size: 1em;\n}\n\ndt label {\n    display: flex;\n    flex-flow: row nowrap;\n    align-items: center;\n    justify-content: space-around;    \n}\n</style>\n\n<script>\nimport json2mq from 'json2mq';\nimport Media from './Media.html';\nimport { totals } from './helpers.js';\n\nexport default {\n\n    components: { Media },\n\n    oncreate() {\n        const { rounds } = this.store.get();\n\n        if (rounds.length < 1) {\n            this.nextRound();\n        }\n    },\n\n    computed: {\n        totals: ({ $rounds }) => totals($rounds)\n    },\n\n    helpers: {\n        json2mq\n    },\n\n    methods: {\n        nextRound() {\n\n            const { rounds, players } = this.store.get();\n\n            const round = players.reduce((m, p) => {\n                m[p] = 0;\n                return m;\n            }, {});\n\n            rounds.push(round);\n\n            this.store.set({ rounds });\n        },\n\n        removeRound(index) {\n            let { rounds } = this.store.get();\n            \n            rounds = rounds.filter((r, i) => i !== index);\n\n            this.store.set({ rounds });\n        },\n\n        updateScore(e, player, index) {\n\n            const { rounds } = this.store.get();\n            const value = +e.target.value;\n\n            const updated = rounds.map((round, i) => {\n\n                if (i === index) {\n                    round[player] = value;\n                }\n\n                return round;\n            });\n\n            this.store.set({ rounds: updated });\n        }\n    }\n}\n</script>"
  ],
  "names": [],
  "mappings": "AAwEA,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CAAC,MAAM,CACrB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,AAClC,CAAC,AAED,EAAE,cAAC,CAAC,AACA,SAAS,CAAE,GAAG,AAClB,CAAC,AAED,MAAM,QAAQ,cAAC,CAAC,AACZ,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,GAAG,AAClB,CAAC,AAED,gBAAE,CAAC,KAAK,cAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CAAC,MAAM,CACrB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,YAAY,AACjC,CAAC"
}